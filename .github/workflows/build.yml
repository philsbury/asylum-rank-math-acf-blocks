name: Production Build

concurrency:
  group: prod_build

# Controls when the workflow will run
on:
  push:
    tags:
    - '*'

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: little-core-labs/get-git-tag@v3.0.1
        id: tagName
      - uses: actions/checkout@v3
      # Make sure the @v0.5.4 matches the current version of the
      # action
      - name: Make build directory
        run: mkdir -p ./build/${{ github.event.repository.name }}/${{ github.event.repository.name }}
      - name: Make zip directory
        run: mkdir -p ./zips/${{ github.event.repository.name }}
      - name: Make changelog directory
        run: mkdir -p ./changelog
      - name: Setup PHP
        uses: "shivammathur/setup-php@v2"
        with:
          php-version: "8.2"
      - name: Composer Auth
        run: echo '${{ secrets.COMPOSER_AUTH_JSON }}' > $GITHUB_WORKSPACE/auth.json
      - name: Install composer
        uses: "ramsey/composer-install@v2"
        with:
          composer-options: "--ignore-platform-reqs --no-dev --no-cache"
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 20
      - name: Build NPM
        run: npm i && npm run build
      - name: Move
        run: cp *.php ./build/${{ github.event.repository.name }}/${{ github.event.repository.name }}/;
          cp *.md ./build/${{ github.event.repository.name }}/${{ github.event.repository.name }}/;
          cp -R src ./build/${{ github.event.repository.name }}/${{ github.event.repository.name }}/;
          cp -R dist ./build/${{ github.event.repository.name }}/${{ github.event.repository.name }}/;
          cp -R vendor ./build/${{ github.event.repository.name }}/${{ github.event.repository.name }}/;
          cp changelog.md ./changelog/${{ github.event.repository.name }}.md;
      - uses: vimtor/action-zip@v1
        with:
          files: ./build/${{ github.event.repository.name }}
          dest: ./zips/${{ github.event.repository.name }}/${{ github.event.repository.name }}-${{ steps.tagName.outputs.tag }}.zip
      - name: Push Zip to S3
        uses: jakejarvis/s3-sync-action@v0.3.1
        env:
          SOURCE_DIR: './zips'
          AWS_REGION: 'eu-west-2'
          AWS_S3_BUCKET: '${{ secrets.AWS_S3_BUCKET }}'
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - name: Slack Notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_TITLE: Build ${{ job.status }}
          SLACK_FOOTER: ${{ job.status }}
          SLACK_COLOR: ${{ job.status }}
          SLACK_MESSAGE: Deployment ${{ github.event.repository.name }} ${{ steps.tagName.outputs.tag }}
        if: always()


    # - name: Print new build number
    #   run: echo "Build number is $GITHUB_RUN_NUMBER"
      # Or, if you're on Windows: echo "Build number is ${env:BUILD_NUMBER}"